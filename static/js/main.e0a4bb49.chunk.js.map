{"version":3,"sources":["data/index.js","data/opening.js","data/servusi.js","data/your_harem.js","data/post_script.js","data/the_next_day.js","redux/selectors.js","redux/slice.js","components/cards/MultiCard.js","components/cards/SingleCard.js","components/cards/index.js","components/card-list/index.js","servus-components/modal/index.js","servus-components/title/index.js","servus-components/servus-card/EditAndDeleteButtons.js","servus-components/servus-card/index.js","servus-components/servus-list/index.js","components/save-dialog/DeleteSaves.js","components/save-dialog/NameAndSubmitSave.js","components/save-dialog/utils.js","components/save-dialog/SelectSaveAndLoad.js","components/save-dialog/index.js","components/app-bar/index.js","export-components/list/index.js","export-components/modal/index.js","components/section/index.js","components/show-story/index.js","App.js","app/store.js","index.js"],"names":["exportObject","opening","title","alwaysShowTitle","description","servusi","your_harem","wares","choices","cost","multi","post_script","the_next_day","getShowStory","state","showStory","getSaveTitle","saveTitle","getWares","getServusSparkWares","createSelector","filter","ware","getWaresCostArray","map","getAmountOfCoinsLeft","costArray","sum","getServusi","getAmountOfServusiLeft","length","getCurrentServusFromServusi","currentServus","servusString","find","servus","id","getWaresTitlesArray","getDialogsByFunction","dialogs","specificDialog","get","getDataForSaving","getWaresDeduped","reduce","allWares","wareExistsAtIndex","findIndex","aWare","push","purchases","getServusiForExport","name","imgSrc","dataSlice","createSlice","initialState","save","export","reducers","updateWares","action","exists","payload","updateMultWare","choiceIndex","val","increase","ind","toggleDialog","addServus","Math","random","toString","substr","tempImgSrc","updateServus","saveServusTempLink","servusIndex","updateCurrentServus","deleteServus","loadSave","toggleShowStory","updateSaveTitle","actions","AlterMultChoiceComponent","choice","dispatch","useDispatch","useSelector","Grid","container","justify","IconButton","onClick","Remove","Typography","align","style","alignSelf","Add","MultiCardComponent","backgroundColor","height","Card","padding","spacing","item","xs","variant","textTransform","content","SingleCardComponent","component","Button","alignItems","CardComponent","picked","CardType","data","withWidth","width","selectedWaresTitles","cardList","includes","paddingTop","GridList","cellHeight","cols","sm","md","lg","xl","GridListTile","border","useStyles","makeStyles","theme","dialog","overflowY","ModalComponent","classes","isOpen","Dialog","paper","open","onClose","TextField","fullWidth","autoFocus","label","value","onChange","e","target","onKeyUp","key","onKeyPress","helperText","ServusTitleComponent","startIcon","EditAndDeleteButtonsComponent","Create","DeleteForever","ServusCardComponent","servusName","maxWidth","EditAndDeleteButtons","src","loader","CircularProgress","unloader","paddingBottom","margin","formControl","minWidth","DeleteSavesComponent","saves","JSON","parse","localStorage","getItem","useState","selectedSave","updateSelectedSave","FormControl","className","InputLabel","htmlFor","Select","native","inputProps","aria-label","saveName","setItem","stringify","NameAndSubmitSaveComponent","updateSaveName","dataToSave","handleClick","saveObject","saveData","currentSaveIndex","handleLocalSaveClick","SelectSaveAndLoadComponent","selectEmpty","marginTop","SaveDialogComponent","NameAndSubmitSave","SelectSaveAndLoad","DeleteSaves","numOfServusi","numOfCoins","toggleSaveDialog","greaterThanSmall","AppBar","position","Save","paddingRight","ListComponent","items","index","Component","href","rel","ExportModalComponent","SectionComponent","children","section","desc","ShowStoryComponent","checked","FormGroup","row","FormControlLabel","labelPlacement","control","Checkbox","App","overflowX","configureStore","reducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"yOAkGeA,EATM,CACnBC,QC1Fc,CACdC,MAAO,GACPC,iBAAiB,EACjBC,YAAa,CACX,8UACA,uPACA,8DACA,yQACA,4NACA,0DACA,wRACA,odACA,sJACA,gDACA,oYACA,+KACA,qEACA,kFACA,gRACA,0xBACA,2NACA,wQACA,gDACA,mPACA,iaACA,qJACA,+TACA,iFACA,gYACA,0DACA,MACA,uEACA,qCD2DFC,QE3Fc,CACdH,MAAO,UACPE,YAAa,CACX,gDACA,qxBACA,gVACA,msBACA,q8BACA,8SACA,+aACA,+RACA,iNACA,ilBACA,+SACA,unBACA,0JF6EFE,WG5FiB,CACjBJ,MAAO,aACPE,YAAa,CACX,2KACA,4gBACA,oUACA,0GHuFFG,MAvFY,CACZL,MAAO,QACPC,iBAAiB,EACjBC,YAAa,CACX,sFACA,uRACA,oGACA,gFAEFI,QAAS,CACP,CACEN,MAAO,iBACPE,YACE,spBACFK,KAAM,EACNC,OAAO,GAET,CACER,MAAO,eACPE,YACE,0YACFK,KAAM,EACNC,OAAO,GAET,CACER,MAAO,UACPE,YACE,0hBACFK,KAAM,EACNC,OAAO,GAET,CACER,MAAO,wBACPE,YACE,ifACFK,KAAM,EACNC,OAAO,GAET,CACER,MAAO,SACPE,YACE,gvBACFK,KAAM,EACNC,OAAO,GAET,CACER,MAAO,WACPE,YACE,oxBACFK,KAAM,EACNC,OAAO,GAET,CACER,MAAO,SACPE,YACE,mXACFK,KAAM,EACNC,OAAO,GAET,CACER,MAAO,eACPE,YACE,0NACFK,KAAM,EACNC,OAAO,GAET,CACER,MAAO,OACPE,YACE,waACFK,KAAM,EACNC,OAAO,GAET,CACER,MAAO,SACPE,YACE,wjCACFK,KAAM,EACNC,OAAO,KAUXC,YI9FkB,CAClBT,MAAO,GACPE,YAAa,CACX,mHACA,gMACA,yZACA,+CACA,sKJwFFQ,aK/FmB,CACnBV,MAAO,eACPE,YAAa,CACX,yLACA,oDACA,+NACA,gMACA,gEACA,4cACA,wHACA,oEACA,eACA,Y,gBCTSS,EAAe,SAACC,GAAD,OAAWA,E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","file":"static/js/main.e0a4bb49.chunk.js","sourcesContent":["import opening from \"./opening\";\nimport servusi from \"./servusi\";\nimport your_harem from \"./your_harem\";\nimport post_script from \"./post_script\";\nimport the_next_day from \"./the_next_day\";\n\nconst wares = {\n  title: \"Wares\",\n  alwaysShowTitle: true,\n  description: [\n    \"<i>One by one the Sparks flare up, pulsating with unleashed energy taking form.</i>\",\n    \"Alright great! Now the process will take a while, roughly 20 minutes. Maybe you’d like to look around the other wares we have to offer? See, we are aware you likely lack the option to house your Harem so why not take some of our products to help yourself in various ways?\",\n    \"I let you have 6 Coins to make purchases from here. Some stuff is on the House and the rest cost.\",\n    \"But you know what? I let you have some freebies to enjoy yourself some more.\",\n  ],\n  choices: [\n    {\n      title: \"Servus Essence\",\n      description:\n        \"This little potion is made from the manipulated essence of a Servus. It can bestow any and all qualities of a Servus like their eternal youth and healing factor on whoever it drinks, without their desire to serve someone. Additionally, drinking it allows for a body reshaping to the one ingesting it, in a form that doesn’t require upkeep. This small vial is made for you personally and your free to either drink it now or at a later point in time. If you were to die through violence you can choose to have ‘me’ resurrect you, but if you happen to get sick of a long life you can also just choose to die, and I arrange for it to be painlessly.\",\n      cost: 0,\n      multi: false,\n    },\n    {\n      title: \"Lust Essence\",\n      description:\n        \"This is just a tiny something I feel like giving out to everyone. Hey I am still a God of Sex you know? Basically, this little potion gives you a slight form of Sex Magic. You can toggle your fertility, are immune to STD’s, can ignore refractory period etc. Also, you gain some very good sexual skills, enough to bring your Servusi to ecstasy and be one of the best lays on your Planet.\",\n      cost: 0,\n      multi: false,\n    },\n    {\n      title: \"Dungeon\",\n      description:\n        \"Why not have a place to have some fun with your Harem? This Dungeon is a small pocket dimension roughly the size of a medium sized City apartment. In it are all the things you could want for your kinky desires. A comfy bed, an assortment of ‘adult toys’ and if you desire anything else for your carnal needs you can simply summon it. Nothing created in this Dungeon can leave it however. You and your Harem can go and enter as you please with but a thought. If you wish you can also allow others to enter, should you want to.\",\n      cost: 0,\n      multi: false,\n    },\n    {\n      title: \"Libis Contact Details\",\n      description:\n        \"Lastly for free stuff you can get my phone number. I imprint it in your mind, and you can reach me with it using any phone or phone like device. This is mostly intended as a sort of ‘Service Hotline’ but it comes with another function. You are free to leave a recommendation for me. If you find someone you think could deserve or benefit from our Services, you can tell me about them and I give them a background check. If they pass, they may be the next lucky customer of our Market.\",\n      cost: 0,\n      multi: false,\n    },\n    {\n      title: \"Outfit\",\n      description:\n        \"A popular thing for if you don’t want your Harem to be naked all the time. These shapeshifting clothing will come as one for every Servus and duplicate if the amount is growing. These Outfits are self-cleaning and repairing and will always find their way back to its owner. You also get one for yourself. Furthermore, they have the interesting property of making their owner a perfect function for whatever the Outfit is like. For example, if the Outfit is a Maid Dress they will become a top class maid and if it is a Nurse outfit they will become a great Doctor. You can at any time choose how they look and how ‘Kinky’ they are. So, if one is at work they can look like a professional Pilot but in the Bedroom be a sexy Stewardess.\",\n      cost: 1,\n      multi: false,\n    },\n    {\n      title: \"Seraglio\",\n      description:\n        \"It would be understandable if you don’t have enough room to House everyone so let me help you out. You have access to a small Pocket Dimension the size of a large Villa. It comes with all you would need alongside some extras including a limitless and self-renewing storage of food and drink, Wi-Fi, electricity, running water and more than enough room for you and everyone living with you. It can even come with specified extras like a Pool or a Garden and if you want the Dungeon can be made a part of it. Even the weather and the view from the Villa can be determined. You can enter it simply via thinking as can everyone you allow entrance. You can also choose to ‘insert’ it anywhere in the World. No one will find it odd and once a year you can change the location.\",\n      cost: 2,\n      multi: false,\n    },\n    {\n      title: \"Wealth\",\n      description:\n        \"It’s always nice to have financial security isn’t it? With this you get an untraceable bank account with the equivalent of 1 Million US Dollar. This money will not cause any inflation, jealousy or other money related issues. It will renew itself every year so feel free to spend it on Projects, Charity, Investments etc. You can purchase this multiple times.\",\n      cost: 1,\n      multi: false,\n    },\n    {\n      title: \"Servus Spark\",\n      description:\n        \"You really don’t feel like starting out with only 10 Servusi? Alright than if you want you can get more for the beginning. For 1 Coin you can get another Spark to shape and you can purchase this multiple times.\",\n      cost: 1,\n      multi: true,\n    },\n    {\n      title: \"Luck\",\n      description:\n        \"One of our members is named Fortunado and he is a God of Gambling and Luck. Want some of it for yourself? This will give you a small blessing of luck and fortitude. Nothing major but you will find that the odds of bad things happening to you will be a lot lessened while the good stuff is increased. Your not winning every lottery but enter a Casino and you will find yourself getting out with more than you had going in.\",\n      cost: 2,\n      multi: false,\n    },\n    {\n      title: \"Ticket\",\n      description:\n        \"There is another aspect to our Market. See sometimes a Servus already manifests as an attractive someone. This is a mutation of sorts and these Servusi are not imprinting on someone but instead see all of reality as their Master. In these cases, we thought the best way to deal with them is by indulging them in their desire to be free use. They are ‘displayed’ in a separate part of the Market, you probably saw them on our way here, and purchasing a Ticket allows you access. A large Bazar full of thousands of attractive man and woman eager to please whoever comes their way. Sounds intriguing? They won’t be your personal Servus but could be pretty fun either way. You can access this Bazar simply by tearing this Ticket apart and passing through a small portal in front of you. You are granted access for 3 hours and time won’t pass here at the end of which you will leave. You can choose to take others with you and a new Ticket will be at your side in one week. We need to manage the flow of customers somehow. Still makes for a fun weekend activity.\",\n      cost: 1,\n      multi: false,\n    },\n  ],\n};\n\nconst exportObject = {\n  opening,\n  servusi,\n  your_harem,\n  wares,\n  post_script,\n  the_next_day,\n};\n\nexport default exportObject;\n","const opening = {\n  title: \"\",\n  alwaysShowTitle: true,\n  description: [\n    \"You didn’t expect anything eventful to happen today. It was just a typical day, somewhat boring and monotonous, which ended with you crawling into your bed exhausted. A lingering feeling of loneliness crept upon you as the night went on and you found yourself unable to fall asleep. It would be nice to have some company…\",\n    \"Before you could fully finish that thought, your restlessness finally seemed to end as your eyelids grew heavier. Though as you are about to drift of into the sweet embrace of sleep, you notice a small but all the more searing white light…\",\n    \"Followed by the sensation of smashing through a brick wall.\",\n    \"It all happened in an instant and was to your surprise painless, but the whiplash left you dazed as you found yourself… in the middle of a marketplace, alongside many other man and woman. This small group of strangers appeared to be as confused as you felt.\",\n    \"Then a man clad in luxurious silk and giving of an aura of… hard to describe but the most fitting way would be ‘gentle superiority’, approached you and you could feel yourself mysteriously drawn to him.\",\n    \"“Hello there my friend! Please come with me.”\",\n    \"Just as these words left his mouth, he grasped your hand and pulled you away from the crowd. You glanced back and saw the other people from before in a similar situation, being led away by several other figures, seeming similar to the gentleman that choose you for some reason.\",\n    \"While trying to keep up with this mysterious man, you find your eyes wandering and take in your surroundings. It seemed as if wherever you were looked like an Oriental Bazar of sorts. However, to your shock you weren’t surrounded by jewellery, carpets or spices. Instead, the only ‘wares’ appeared to be… slaves in shackles! Oddly these chained and naked figures gave you several seductive grins and eager looks which made you rather suspicious.\",\n    \"Before you can fully process this you find yourself seated on a pillow in a gilded tent, your favourite drink in hand… how did that get there?\",\n    \"“Please make yourself comfortable.”\",\n    \"The mysterious figure told you as you got your first real chance to look at him. He was a rather handsome one you had to admit, with hard muscles and pink hair that stood out, even if he wouldn’t have these markings on his body. His clothing had been thrown away as he entered, seemingly being restrictive for him as leaned back into a pillow and turned his full attention to you.\",\n    \"Alright. Sorry for the haste just now but we would like to get this over with as quickly and smoothly as possible. Welcome to the Willing Slave Market! Now my name is…\",\n    \"…Wait… why are you looking so horrified? I said WILLING.\",\n    \"Ooookay give me a second I explain to you real quick what’s going on here.\",\n    \"See my name is Libis. I am a minor God of sexual desire. My colleagues are also divine entities of similar backgrounds. We all come from the same localized Verse and met up for companionship and to not be so alone in this vast Verse. What? Even Gods like companionship.\",\n    \"Well, what follows next is kinda a long story but to make it short, we happened to come across a God of Creation in our home universe. He was not much stronger than any of us, but he had plans of conquest and tried to create a species of super soldiers to serve as his lackeys in a siege on a Planet that refused to worship him. Now we decided to not let some asshat try and conquer a whole World that didn’t want to deal with his bullshit, pardon my language, so we went and teamed up on him and destroyed him. He wasn’t truly immortal, at least to not as strong degrees that he could come back, so that was one thing taken care of. However, while said deity is now dealt with… we still have their creation. Those were the ‘Servus’ or ‘Servusi’ in plural.\",\n    \"They are a literal semblance of potential life matter that is conscious, sentient and born with mature mentality. They don’t even look like anything alive yet, they are only orbs of light the size of a football.\",\n    \"They want nothing more than to serve. I mean they NEED to serve. Literally. They are an incredible submissive species that take great joy in following and obeying a Master. For them it is like a purpose of life. To be of use and enjoy the pleasure of servitude.\",\n    \"And we… kinda killed their Master. Oops.\",\n    \"At least we did that before the thousands of them could ‘imprint’ on him and see him as their Master. However, there is still the fact that we got a whole species with these kinds of desires and we felt obligated to help them out.\",\n    \"So, for now we have decided to make US their masters however this can’t really be a permanent solution. There is a practical infinite amount of them, as the thing that ‘births’ them is a raw hole in space time that spits out thousands of them per year. Let alone that this is still merely a non- permanent solution, and everyone knows that, them as well. There is no ‘personal’ connection.\",\n    \"So, in an infinite Multiverse how do you deal with what is basically the ideal willing slave race? Well simple. We let them fulfill their purpose.\",\n    \"This is how this project came to be. Welcome to the Willing Slave Market, or also the Servusi Market. We are an organization that decided to ensure these poor Slaves with no Master or Mistress to call their own get one by delivering them as servants to beings across the Multiverse. Be they Gods or mortals like you.\",\n    \"You and the other people from before were picked at random so congratulations!\",\n    \"Well, we DID consider other factors than random chance of course. Like overall mental state, if you have some good Karma to spend and so on. We’re not just giving them to some abusive asshole or serial killer or something. I actually choose you myself! You seemed like you could use some extra company and you deserved it in my book. But enough of the method of choosing…\",\n    \"So what do you say? Want to take some of them with you?\",\n    \"...\",\n    \"You do? OKAY! Great thanks a lot you’re doing us a favour here.\",\n    \"Now let’s get too business.\",\n  ],\n};\n\nexport default opening;\n","const servusi = {\n  title: \"Servusi\",\n  description: [\n    \"Some more explanation about what a Servus is.\",\n    \"A Servus is filled with love and adoration for their Master. They are unbreakably loyal and in love to them till the very end and give of a passive aura of love that makes their Master also feel happiness when doing something with them, but not in a way which makes the emotion lessen in long term. They want to be their Masters perfect Servant/Lover/etc. While the relationship between you and your Servusi is dependent on you no matter what form it takes they will be the perfect fit for it. For example: any and all kinks you happen to have are their own in a complimentary way. If you’re a Dom their a Sub, if you’re a Sub their a Dom and as a Switch their also Switches for example. This even counts for your actual sex drive, or lack thereof if you happen to be asexual.\",\n    \"By nature, Servusi don’t really have a concept of sexuality as mortals do. They simply love their Master and their fellow Servus. I guess you could call them pansexual but it wouldn’t quite fit. There will be in Harem relationships if you have no issue with that though you will always be their ‘nexus’ basically.\",\n    \"They aren’t completely immortal but have eternal youth, don’t need sustenance and are immune to disease as well as all having a healing factor strong enough to regenerate limbs in a day. Their mental and physical age is never younger than 18 years old, from the moment they pop into existence. They are soul bonded to their Master and will only die when you do. Should they die of violence for some reason they will ‘respawn’ after a day by taxing your Soul. Don’t worry your Soul will be fine and regenerate but you’ll feel tired for a few hours, proportional to however many Servusi revived. After YOU die, they will follow you into whatever afterlife you happen to go to.\",\n    \"They all have a passive psychic effect which works in your and their favour in terms of ‘acceptance’. What this means is that no one will mind it or find your relationship with them odd. Not any family members, friends, strangers, not even any romantic partners you happen to have. In fact, a romantic non Servus partner could be seen by them as a ‘second Master’ and they will strive to serve them as well. This field even works in terms of acceptance of sexuality, so if you are a guy and your Servusi Harem is filled with other guys even the most extreme homophobe wouldn’t bat an eye at your relationship with any of them for example. However, it doesn’t actually cover sexual acts so you would still be fined in public if you do anything sexual with them inside a filled Mall for example. Furthermore, should they look ‘non-human’ like a Twi’lek or have Cat ears this will also be hidden by their psychic effect.\",\n    \"Additionally, their psychic effect allows them empathy and to know what you’re feeling and act accordingly. For example, to comfort you when you’re feeling sad. In general, they strife to always support you. Whether that is relaxing after a long day at work or being a wing man/wing woman.\",\n    \"As mentioned, a Servus starts as a mere Spark of possible life but this Spark can take the form of a being designated to them by their Master. Just to get this cleared out. A Servus can only manifest and change their form ONCE. After this they will be in this form forever. This form can be whatever gender you prefer, be it female, male, or something different like nonbinary or a girl with male testicles to give two examples.\",\n    \"If you happen to make them become a ‘fictional’ character of some sort they will also become them in all personality, biological and all else, but any powers they have are not present. We sealed this aspect about them away to ensure there will be no actual wars due to them.\",\n    \"You can also choose to ‘alter’ some things about a character your Servus is supposed to take inspiration from. For example, an gender bent version of the original or some other slight alterations.\",\n    \"They have an interesting way of reproduction. Namely they can reproduce asexually and ‘will’ themselves into being pregnant. This pregnancy is independent of gender and even a male could birth another Servus. This will occur like a human pregnancy but will be guaranteed to be safe. They can give birth this way only once a year. They can however decide how long the pregnancy is, from a week to a full year. The timespan doesn’t actually affect the growing Servus in any way. They will than birth one Servus Spark which will abide by all the same rules the other Servusi do.\",\n    \"They can also ‘impregnate’ someone if the receiving party consents. This will give them the same kind of ‘Servus’ pregnancy but the resulting child can be decided by the parent who gives the birth to be either the same species as them or a Servus as well. No hybrids are possible.\",\n    \"Servusi by nature possess divine essence as a creation of raw energy by their creator. However, they themselves are neither gods or mortals. They are more akin to demi-demigods in terms of how much divine power is present in them. This doesn’t have any actual effect on you and really only explains the nature of their abilities. However, they ARE pretty popular by Gods who like being worshipped. We have a… let’s say ‘contract’ with a certain city of Gods who steadily take some poor Servusi of our hands. Don’t worry I can assure you every Servusi that leaves this market enjoys their existence.\",\n    \"PHEW! Okay that should be about everything in terms of Servusi characteristics. Sorry about that info dump. Now let’s get into making them okay?\",\n  ],\n};\n\nexport default servusi;\n","const your_harem = {\n  title: \"Your Harem\",\n  description: [\n    \"Libis snaps his fingers and several orbs of energy appear before you. They surround you like moths do a bright light and you can feel the excitement emitting from them.\",\n    \"While we have plenty of Servusi to go around, out of experience I can tell you that too many Waifu or Husbando can be a lot to deal with all at once. As such we made a certain ‘limit’. You get to choose any number from 1 to 10 Servus Sparks. This are the minimum and maximum number of Sparks you can receive so its ultimately up to you how big you want your Harem to be. These Sparks you will than form into your future Harem. Don’t worry its easy trust me, and they will be happy as long as you are happy.\",\n    \"As stated, you can assign them any form you wish, be it after a fictional character, one you completely made up, or even a real character. In the latter case don’t worry it will not be weird and their minor psychic influence will guarantee that two of the same looking people won’t make it difficult in any way.\",\n    \"Choose up to 10 characters no matter what source they are from, for your Servusi to take the form of.\",\n  ],\n};\n\nexport default your_harem;\n","const post_script = {\n  title: \"\",\n  description: [\n    \"Libis gives you a fond look as your Sparks take further shape and now materialize into the forms you wished for.\",\n    \"Alrighty! That’s my job done. I’ll send you back to your home world now. Please enjoy your Harem and purchases. I know you will. We never had a disappointed client I can tell you.\",\n    \"OH! One more thing. It’s nothing major but now that you have gotten in touch with divine beings, chances are others similar to us will take attention of you. Relax this doesn’t have to mean much and I can simply give you and your Harem a veil if you’d rather want a peaceful live. However, I do think I should tell you that this may be an opportunity. There is so much more to see after all.\",\n    \"Either way… have a nice life my friend.\",\n    \"(What this means is that you are free to chain your encounter with the Willing Slave Market to another CYOA. Anything you got here will follow you in that CYOA.)\",\n  ],\n};\n\nexport default post_script;\n","const the_next_day = {\n  title: \"The Next Day\",\n  description: [\n    \"You wake up in your bed, feeling well rested and your mind free. A sense of relaxation and comfort washes over you. A small smile creeps on your face. You feel happy for some reason.\",\n    \"You remember your dream and Libis. What a weird-.\",\n    \"You don’t finish the thought as you look around your room. The realisation sets in that it WASN’T a dream as your gaze focuses on the Servus/Servusi around you, happily sleeping away as they cuddle next to you.\",\n    \"You need to take a moment to process that, but eventually you just choose to lay back down, enjoying the moment a bit longer. Looks like you weren’t going to be lonely for a long time.\",\n    \"As you do you notice a small strip of paper next to your bed:\",\n    \"HEY! Its me again Libis. Sorry but I forgot to ask you for some information. I am currently doing a Survey in terms of who we give away. Please if you have the time, write down what your Harem looks like and who is in it. Names, eventual differences and all, as well what you and them will be up too. (Basically a way of trying to make your ‘Build’ included in the CYOA somehow. Feel free to Post your Build and ‘plans’ if you have any.)\",\n    \"Don’t worry about sending it. This paper will be mailed to me the moment you are finished, replaced by a Cookie.\",\n    \"Thanks a lot for taking the Services of the Willing Slave Market!\",\n    \"Best Wishes,\",\n    \"Libis.\",\n  ],\n};\n\nexport default the_next_day;\n","import { get, sum } from \"lodash\";\nimport { createSelector } from \"reselect\";\n\nexport const getShowStory = (state) => state.showStory;\n\nexport const getSaveTitle = (state) => state.saveTitle;\n\nexport const getWares = (state) => {\n  return state?.wares || [];\n};\n\nexport const getServusSparkWares = createSelector(getWares, (wares) =>\n  wares.filter((ware) => ware.title === \"Servus Spark\")\n);\n\nexport const getWaresCostArray = createSelector(getWares, (wares) =>\n  wares.map((ware) => ware?.cost || 0)\n);\n\nexport const getAmountOfCoinsLeft = createSelector(\n  getWaresCostArray,\n  (costArray) => 6 - sum(costArray)\n);\n\nexport const getDialogs = (state) => {\n  return state?.dialogs || {};\n};\n\nexport const getServusi = (state) => state?.servusi || [];\n\nexport const getAmountOfServusiLeft = createSelector(\n  getServusSparkWares,\n  getServusi,\n  (wares, servusi) => 10 + wares.length - servusi.length\n);\n\nexport const getCurrentServusString = (state) => {\n  return state?.currentServus || \"\";\n};\n\nexport const getCurrentServusFromServusi = createSelector(\n  getServusi,\n  getCurrentServusString,\n  (servusi, servusString) =>\n    servusi.find((servus) => servus.id === servusString) || {}\n);\n\nexport const getWaresTitlesArray = createSelector(getWares, (wares) =>\n  wares.map((ware) => ware.title)\n);\n\nexport const getDialogsByFunction = createSelector(getDialogs, (dialogs) => {\n  return (specificDialog) => get(dialogs, specificDialog, false);\n});\n\nexport const getDataForSaving = createSelector(\n  getServusi,\n  getWares,\n  (servusi, wares) => ({ servusi, wares })\n);\n\nexport const getWaresDeduped = createSelector(getWares, (wares) => {\n  return wares.reduce((allWares, ware) => {\n    const wareExistsAtIndex = allWares.findIndex(\n      (aWare) => aWare.title === ware.title\n    );\n\n    if (wareExistsAtIndex === -1) allWares.push({ ...ware, purchases: 1 });\n    else\n      allWares[wareExistsAtIndex] = {\n        ...allWares[wareExistsAtIndex],\n        purchases: allWares[wareExistsAtIndex].purchases + 1,\n      };\n    return allWares;\n  }, []);\n});\n\nexport const getServusiForExport = createSelector(getServusi, (servusi) => {\n  return servusi.map(({ name, imgSrc }) => ({ title: name, imgSrc }));\n});\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const dataSlice = createSlice({\n  name: \"data\",\n  initialState: {\n    wares: [],\n    servusi: [],\n    currentServus: \"\",\n    saveTitle: \"\",\n    dialogs: {\n      servusi: false,\n      save: false,\n      export: false,\n    },\n    showStory: false,\n  },\n  reducers: {\n    updateWares: (state, action) => {\n      const exists = state.wares.find(\n        (ware) => action.payload.title === ware.title\n      );\n      state.wares = exists\n        ? [...state.wares.filter((ware) => action.payload.title !== ware.title)]\n        : [...state.wares, action.payload];\n    },\n    updateMultWare: (state, action) => {\n      const choiceIndex = state.wares.findIndex((val) => {\n        return val.title === action.payload.title;\n      });\n      if (\n        (choiceIndex !== -1 && !action.payload.increase) ||\n        !action.payload.increase\n      ) {\n        state.wares = [\n          ...state.wares.filter((val, ind) => {\n            return ind !== choiceIndex;\n          }),\n        ];\n      } else {\n        state.wares = [...state.wares, action.payload];\n      }\n    },\n    toggleDialog: (state, action) => {\n      state.dialogs = {\n        ...state.dialogs,\n        [action.payload]: !state.dialogs[action.payload],\n      };\n    },\n    addServus: (state) => {\n      const id = Math.random().toString(36).substr(2, 9);\n      state.servusi = [\n        ...state.servusi,\n        {\n          id,\n          name: \"\",\n          imgSrc: \"\",\n          tempImgSrc: \"\",\n        },\n      ];\n      state.currentServus = id;\n    },\n    updateServus: (state, action) => {\n      const servusi = state.servusi;\n      const servusIndex = state.servusi.findIndex(\n        (servus) => servus.id === action.payload.id\n      );\n      servusi[servusIndex] = action.payload;\n      state.servusi = [...servusi];\n    },\n    saveServusTempLink: (state, action) => {\n      const servusi = state.servusi;\n      const servusIndex = state.servusi.findIndex(\n        (servus) => servus.id === action.payload\n      );\n      let servus = servusi[servusIndex];\n      servus = {\n        ...servus,\n        imgSrc: servus.tempImgSrc,\n      };\n      servusi[servusIndex] = servus;\n      state.servusi = [...servusi];\n    },\n    updateCurrentServus: (state, action) => {\n      state.currentServus = action.payload;\n    },\n    deleteServus: (state, action) => {\n      state.servusi = [\n        ...state.servusi.filter((servus) => servus.id !== action.payload),\n      ];\n      state.currentServus = \"\";\n    },\n    loadSave: (state, action) => {\n      state = { ...state, ...action.payload };\n      return state;\n    },\n    toggleShowStory: (state) => {\n      state.showStory = !state.showStory;\n    },\n    updateSaveTitle: (state, action) => {\n      state.saveTitle = action.payload;\n    },\n  },\n});\n\nexport const {\n  updateWares,\n  updateMultWare,\n  toggleDialog,\n  addServus,\n  updateServus,\n  saveServusTempLink,\n  loadSave,\n  updateCurrentServus,\n  deleteServus,\n  toggleShowStory,\n  updateSaveTitle,\n} = dataSlice.actions;\n\nexport default dataSlice.reducer;\n","import React from \"react\";\nimport { Grid, Typography, Card, IconButton } from \"@material-ui/core\";\nimport Interweave from \"interweave\";\nimport { Add, Remove } from \"@material-ui/icons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getWares } from \"../../redux/selectors\";\nimport { updateMultWare } from \"../../redux/slice\";\n\nconst AlterMultChoiceComponent = ({ choice }) => {\n  const dispatch = useDispatch();\n  const wares = useSelector(getWares);\n  const purchases = wares.filter((ware) => {\n    return ware.title === choice.title;\n  }).length;\n\n  return (\n    <Grid container justify=\"space-between\">\n      <IconButton\n        title=\"Remove\"\n        onClick={() => dispatch(updateMultWare({ ...choice, increase: false }))}\n      >\n        <Remove />\n      </IconButton>\n      <Typography align=\"center\" style={{ alignSelf: \"center\" }}>\n        {purchases}\n      </Typography>\n      <IconButton\n        title=\"Add\"\n        onClick={() => dispatch(updateMultWare({ ...choice, increase: true }))}\n      >\n        <Add />\n      </IconButton>\n    </Grid>\n  );\n};\n\nconst MultiCardComponent = ({ choice, backgroundColor }) => {\n  const { title, description, cost } = choice;\n  return (\n    <Grid\n      container\n      style={{\n        backgroundColor,\n        height: \"100%\",\n      }}\n    >\n      <Card\n        style={{ backgroundColor: \"inherit\", padding: \"16px\", height: \"100%\" }}\n      >\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <Typography variant=\"h5\" style={{ textTransform: \"uppercase\" }}>\n              {title}\n            </Typography>\n          </Grid>\n          <Grid item xs={12}>\n            <Typography\n              style={{ textTransform: \"uppercase\" }}\n            >{`${cost} Coin(s)`}</Typography>\n          </Grid>\n          <Grid item xs={12}>\n            <AlterMultChoiceComponent choice={choice} />\n          </Grid>\n          <Grid item xs={12}>\n            <Typography>\n              <Interweave content={description} />\n            </Typography>\n          </Grid>\n        </Grid>\n      </Card>\n    </Grid>\n  );\n};\n\nexport default MultiCardComponent;\n","import { Button, Card, Grid, Typography } from \"@material-ui/core\";\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { updateWares } from \"../../redux/slice\";\n\nconst SingleCardComponent = ({ choice, backgroundColor }) => {\n  const { title, description, cost } = choice;\n  const dispatch = useDispatch();\n  return (\n    <Card\n      component={Button}\n      onClick={() => dispatch(updateWares(choice))}\n      style={{\n        backgroundColor,\n        padding: \"16px\",\n        height: \"100%\",\n        alignItems: \"end\",\n      }}\n    >\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <Typography variant=\"h5\">{title}</Typography>\n        </Grid>\n        <Grid item xs={12}>\n          {`${cost} Coin(s)`}\n        </Grid>\n        <Grid item xs={12}>\n          <Typography style={{ textTransform: \"none\" }}>\n            {description}\n          </Typography>\n        </Grid>\n      </Grid>\n    </Card>\n  );\n};\n\nexport default SingleCardComponent;\n","import React from \"react\";\nimport MultiCardComponent from \"./MultiCard\";\nimport SingleCardComponent from \"./SingleCard\";\n\nconst CardComponent = ({ choice }) => {\n  const { multi, picked } = choice;\n  const CardType = multi ? MultiCardComponent : SingleCardComponent;\n  const backgroundColor = picked ? \"green\" : \"inherit\";\n  return <CardType backgroundColor={backgroundColor} choice={choice} />;\n};\n\nexport default CardComponent;\n","import { Grid, GridList, GridListTile, withWidth } from \"@material-ui/core\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport data from \"../../data\";\nimport { getWaresTitlesArray } from \"../../redux/selectors\";\nimport CardComponent from \"../cards\";\n\nconst { wares } = data;\n\nconst CardListComponent = ({ width }) => {\n  const selectedWaresTitles = useSelector(getWaresTitlesArray);\n  const breakpoints = {\n    xs: 1,\n    sm: 2,\n    md: 2,\n    lg: 2,\n    xl: 2,\n  };\n  const cardList = wares.choices.map((choice) => ({\n    ...choice,\n    picked: selectedWaresTitles.includes(choice.title),\n  }));\n  return (\n    <Grid container style={{ paddingTop: \"16px\" }}>\n      <GridList cellHeight=\"auto\" cols={breakpoints[width]} spacing={16}>\n        {cardList.map((choice) => {\n          return (\n            <GridListTile\n              style={{ border: \"1px solid black\" }}\n              key={`grid-list-tile-${choice.title}`}\n            >\n              <CardComponent choice={choice} />\n            </GridListTile>\n          );\n        })}\n      </GridList>\n    </Grid>\n  );\n};\n\nexport default withWidth()(CardListComponent);\n","import { Button, Dialog, Grid, makeStyles, TextField } from \"@material-ui/core\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  getCurrentServusFromServusi,\n  getDialogsByFunction,\n} from \"../../redux/selectors\";\nimport {\n  saveServusTempLink,\n  toggleDialog,\n  updateServus,\n} from \"../../redux/slice\";\n\nconst useStyles = makeStyles((theme) => ({\n  dialog: {\n    overflowY: \"hidden\",\n  },\n}));\n\nconst ModalComponent = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const isOpen = useSelector(getDialogsByFunction)(\"servusi\");\n  const servus = useSelector(getCurrentServusFromServusi);\n  const { name, tempImgSrc, id } = servus;\n  return (\n    <Dialog\n      classes={{ paper: classes.dialog }}\n      open={isOpen}\n      onClose={() => dispatch(toggleDialog(\"servusi\"))}\n    >\n      <Grid container spacing={4} style={{ padding: \"32px\" }}>\n        <Grid item xs={12}>\n          <TextField\n            fullWidth\n            autoFocus={!name}\n            label=\"Servus's Name\"\n            value={name}\n            onChange={(e) =>\n              dispatch(updateServus({ ...servus, name: e.target.value }))\n            }\n            onKeyUp={(e) =>\n              e.key === \"Enter\" ? dispatch(toggleDialog(\"servusi\")) : null\n            }\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <Grid container justify=\"space-between\">\n            <TextField\n              label=\"Image Src\"\n              value={tempImgSrc}\n              autoFocus={name !== \"\" && tempImgSrc === \"\"}\n              onChange={(e) =>\n                dispatch(\n                  updateServus({ ...servus, tempImgSrc: e.target.value })\n                )\n              }\n              onKeyPress={(e) => {\n                if (e.key === \"Enter\") {\n                  dispatch(toggleDialog(\"servusi\"));\n                  dispatch(saveServusTempLink(id));\n                }\n              }}\n              helperText=\"Needs actual img link (ex. https://*.jpg)\"\n            />\n            <Button\n              onClick={() => {\n                dispatch(saveServusTempLink(id));\n                dispatch(toggleDialog(\"servusi\"));\n              }}\n            >\n              Save New Link\n            </Button>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Dialog>\n  );\n};\n\nexport default ModalComponent;\n","import { Button, Grid, Typography } from \"@material-ui/core\";\nimport React from \"react\";\nimport { Add } from \"@material-ui/icons\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleDialog, addServus } from \"../../redux/slice\";\nimport ModalComponent from \"../modal\";\n\nconst ServusTitleComponent = () => {\n  const dispatch = useDispatch();\n  return (\n    <Grid container spacing={4} style={{ paddingTop: \"32px\" }}>\n      <Grid item xs={12}>\n        <Typography variant=\"h4\">Your Servusi</Typography>\n      </Grid>\n      <Grid item xs={12}>\n        <Button\n          onClick={() => {\n            dispatch(addServus());\n            dispatch(toggleDialog(\"servusi\"));\n          }}\n          startIcon={<Add />}\n        >\n          Add a Servus\n        </Button>\n      </Grid>\n      <ModalComponent />\n    </Grid>\n  );\n};\n\nexport default ServusTitleComponent;\n","import { Grid, IconButton } from \"@material-ui/core\";\nimport { Create, DeleteForever } from \"@material-ui/icons\";\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  deleteServus,\n  toggleDialog,\n  updateCurrentServus,\n} from \"../../redux/slice\";\n\nconst EditAndDeleteButtonsComponent = ({ servus }) => {\n  const dispatch = useDispatch();\n  const { id } = servus;\n  return (\n    <Grid container justify=\"space-between\">\n      <IconButton\n        onClick={() => {\n          dispatch(updateCurrentServus(id));\n          dispatch(toggleDialog(\"servusi\"));\n        }}\n      >\n        <Create />\n      </IconButton>\n      <IconButton\n        onClick={() => {\n          dispatch(deleteServus(id));\n        }}\n      >\n        <DeleteForever />\n      </IconButton>\n    </Grid>\n  );\n};\n\nexport default EditAndDeleteButtonsComponent;\n","import { Card, CircularProgress, Grid, Typography } from \"@material-ui/core\";\nimport React from \"react\";\nimport { Img } from \"react-image\";\nimport EditAndDeleteButtonsComponent from \"./EditAndDeleteButtons\";\n\nconst ServusCardComponent = ({ servus }) => {\n  const { imgSrc, name } = servus;\n  const servusName = name ? name : \"Name not provided\";\n  return (\n    <Grid container justify=\"center\">\n      <Card\n        style={{\n          maxWidth: \"100%\",\n          border: \"1px solid black\",\n          backgroundColor: \"inherit\",\n        }}\n      >\n        <Grid container spacing={3}>\n          <Grid item xs={12}>\n            <EditAndDeleteButtonsComponent servus={servus} />\n          </Grid>\n          <Grid item xs={12}>\n            <Img\n              style={{ height: \"250px\" }}\n              key={imgSrc}\n              src={imgSrc}\n              loader={<CircularProgress />}\n              unloader={\"Unable to Load Image\"}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <Typography>{servusName}</Typography>\n          </Grid>\n        </Grid>\n      </Card>\n    </Grid>\n  );\n};\n\nexport default ServusCardComponent;\n","import { Grid, withWidth, GridList, GridListTile } from \"@material-ui/core\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { getServusi } from \"../../redux/selectors\";\nimport ServusCardComponent from \"../servus-card\";\n\nconst ServusListComponent = ({ width }) => {\n  const servusi = useSelector(getServusi);\n  const breakpoints = {\n    xs: 1,\n    sm: 2,\n    md: 2,\n    lg: 2,\n    xl: 2,\n  };\n  return (\n    <Grid container style={{ paddingBottom: \"24px\" }}>\n      <GridList\n        cellHeight=\"auto\"\n        cols={breakpoints[width]}\n        spacing={16}\n        style={{ width: \"100%\", margin: 0 }}\n      >\n        {servusi.map((servus) => {\n          return (\n            <GridListTile key={`grid-list-tile-${servus.id}`}>\n              <ServusCardComponent servus={servus} />\n            </GridListTile>\n          );\n        })}\n      </GridList>\n    </Grid>\n  );\n};\n\nexport default withWidth()(ServusListComponent);\n","import {\n  Button,\n  FormControl,\n  Grid,\n  InputLabel,\n  makeStyles,\n  Select,\n} from \"@material-ui/core\";\nimport React, { useState } from \"react\";\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 180,\n  },\n}));\n\nconst DeleteSavesComponent = ({ onClose }) => {\n  const classes = useStyles();\n  const saves = JSON.parse(localStorage.getItem(\"saves\")) || [];\n  const [selectedSave, updateSelectedSave] = useState(\"\");\n  const handleClick = () => {\n    localStorage.setItem(\n      \"saves\",\n      JSON.stringify(saves.filter((save) => save.saveName !== selectedSave))\n    );\n    onClose();\n  };\n\n  return (\n    <Grid container justify=\"space-around\">\n      <FormControl className={classes.formControl}>\n        <InputLabel htmlFor=\"save-to-delete\">Save to Delete</InputLabel>\n        <Select\n          native\n          value={selectedSave}\n          onChange={(e) => updateSelectedSave(e.target.value)}\n          inputProps={{ name: \"load\", id: \"save-to-delete\" }}\n        >\n          <option aria-label=\"None\" value=\"\" />\n          {saves.map((save) => {\n            return (\n              <option value={save.saveName} key={save.saveName}>\n                {save.saveName}\n              </option>\n            );\n          })}\n        </Select>\n      </FormControl>\n      <Button variant=\"outlined\" onClick={handleClick}>\n        Delete\n      </Button>\n    </Grid>\n  );\n};\n\nexport default DeleteSavesComponent;\n","import { Button, Grid, TextField } from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getDataForSaving, getSaveTitle } from \"../../redux/selectors\";\nimport { updateSaveTitle } from \"../../redux/slice\";\nimport { handleLocalSaveClick } from \"./utils\";\n\nconst NameAndSubmitSaveComponent = ({ onClose }) => {\n  const dispatch = useDispatch();\n  const saveTitle = useSelector(getSaveTitle);\n  const [saveName, updateSaveName] = useState(saveTitle);\n  const dataToSave = useSelector(getDataForSaving);\n  const handleClick = () => {\n    handleLocalSaveClick(saveName, dataToSave);\n    dispatch(updateSaveTitle(saveName));\n    onClose();\n  };\n  return (\n    <Grid container justify=\"space-around\">\n      <TextField\n        style={{ margin: \"8px\" }}\n        label=\"Save Name\"\n        value={saveName}\n        onChange={(e) => updateSaveName(e.target.value)}\n        onKeyUp={(e) => (e.key === \"Enter\" ? handleClick() : null)}\n      />\n      <Button variant=\"outlined\" onClick={handleClick}>\n        Save\n      </Button>\n    </Grid>\n  );\n};\n\nexport default NameAndSubmitSaveComponent;\n","export const handleLocalSaveClick = (saveName = \"\", dataToSave = {}) => {\n  let saves = JSON.parse(localStorage.getItem(\"saves\")) || [];\n  const saveObject = { saveName, saveData: dataToSave };\n  const currentSaveIndex = saves.findIndex(\n    (save) => save.saveName === saveName\n  );\n  if (currentSaveIndex !== -1) saves[currentSaveIndex] = saveObject;\n  else saves = [...saves, saveObject];\n  localStorage.setItem(\"saves\", JSON.stringify(saves));\n};\n","import {\n  Button,\n  FormControl,\n  Grid,\n  InputLabel,\n  makeStyles,\n  Select,\n} from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { loadSave, updateSaveTitle } from \"../../redux/slice\";\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 180,\n  },\n}));\n\nconst SelectSaveAndLoadComponent = ({ onClose }) => {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const saves = JSON.parse(localStorage.getItem(\"saves\")) || [];\n  const [selectedSave, updateSelectedSave] = useState(\"\");\n  const handleClick = () => {\n    dispatch(\n      loadSave(saves.find((save) => save.saveName === selectedSave).saveData)\n    );\n    dispatch(updateSaveTitle(selectedSave));\n    onClose();\n  };\n  return (\n    <Grid container justify=\"space-around\">\n      <FormControl className={classes.formControl}>\n        <InputLabel htmlFor=\"save-to-load\">Save to Load</InputLabel>\n        <Select\n          native\n          value={selectedSave}\n          onChange={(e) => updateSelectedSave(e.target.value)}\n          inputProps={{ name: \"load\", id: \"save-to-load\" }}\n        >\n          <option aria-label=\"None\" value=\"\" />\n          {saves.map((save) => {\n            return (\n              <option value={save.saveName} key={save.saveName}>\n                {save.saveName}\n              </option>\n            );\n          })}\n        </Select>\n      </FormControl>\n      <Button variant=\"outlined\" onClick={handleClick}>\n        Load\n      </Button>\n    </Grid>\n  );\n};\n\nexport default SelectSaveAndLoadComponent;\n","import { Button, Dialog, Grid, makeStyles } from \"@material-ui/core\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getDialogsByFunction } from \"../../redux/selectors\";\nimport { toggleDialog } from \"../../redux/slice\";\nimport DeleteSavesComponent from \"./DeleteSaves\";\nimport NameAndSubmitSaveComponent from \"./NameAndSubmitSave\";\nimport SelectSaveAndLoadComponent from \"./SelectSaveAndLoad\";\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 180,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  dialog: {\n    overflowY: \"hidden\",\n    padding: \"24px\",\n  },\n}));\n\nconst SaveDialogComponent = ({ onClose }) => {\n  const isOpen = useSelector(getDialogsByFunction)(\"save\");\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  return (\n    <Dialog open={isOpen} onClose={onClose} classes={{ paper: classes.dialog }}>\n      <Grid container spacing={4}>\n        <Grid item xs={12}>\n          <NameAndSubmitSaveComponent onClose={onClose} />\n        </Grid>\n        <Grid item xs={12}>\n          <SelectSaveAndLoadComponent onClose={onClose} />\n        </Grid>\n        <Grid item xs={12}>\n          <DeleteSavesComponent onClose={onClose} />\n        </Grid>\n        <Grid item xs={12}>\n          <Grid container justify=\"center\">\n            <Button\n              variant=\"outlined\"\n              onClick={() => {\n                dispatch(toggleDialog(\"save\"));\n                dispatch(toggleDialog(\"export\"));\n              }}\n            >\n              View Build As Text\n            </Button>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Dialog>\n  );\n};\n\nexport default SaveDialogComponent;\n","import { AppBar, Button, Grid, Typography, withWidth } from \"@material-ui/core\";\nimport { Save } from \"@material-ui/icons\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  getAmountOfCoinsLeft,\n  getAmountOfServusiLeft,\n} from \"../../redux/selectors\";\nimport { toggleDialog } from \"../../redux/slice\";\nimport SaveDialogComponent from \"../save-dialog\";\n\nconst ApplicationBarComponent = ({ width }) => {\n  const dispatch = useDispatch();\n  const numOfServusi = useSelector(getAmountOfServusiLeft);\n  const numOfCoins = useSelector(getAmountOfCoinsLeft);\n  const toggleSaveDialog = () => dispatch(toggleDialog(\"save\"));\n  const greaterThanSmall = ![\"xs\", \"sm\"].includes(width);\n\n  return (\n    <AppBar position=\"fixed\" style={{ padding: \"8px 8px\" }}>\n      <Grid container justify=\"space-between\">\n        <Button startIcon={<Save />} onClick={toggleSaveDialog}>\n          {greaterThanSmall ? \"Save/Load\" : \"\"}\n        </Button>\n        <Typography style={{ alignSelf: \"center\", paddingRight: \"32px\" }}>{`${\n          greaterThanSmall ? \"Servusi\" : \"S\"\n        }: ${numOfServusi}`}</Typography>\n        <Typography style={{ alignSelf: \"center\", paddingRight: \"8px\" }}>{`${\n          greaterThanSmall ? \"Coins\" : \"C\"\n        }: ${numOfCoins}`}</Typography>\n      </Grid>\n      <SaveDialogComponent onClose={toggleSaveDialog} />\n    </AppBar>\n  );\n};\n\nexport default withWidth()(ApplicationBarComponent);\n","import { Grid, Typography } from \"@material-ui/core\";\nimport React from \"react\";\n\nconst ListComponent = ({ title, items }) => {\n  return (\n    <Grid container>\n      <Grid item xs={12}>\n        <Typography variant=\"h5\">{`${title}:`}</Typography>\n      </Grid>\n      <Grid item xs={12}>\n        <Typography>\n          {items.map((item, index) => {\n            const purchases = item?.purchases || 0;\n            const imgSrc = item?.imgSrc ? item.imgSrc : null;\n            const Component = imgSrc ? \"a\" : \"span\";\n            return (\n              <Component\n                href={imgSrc}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                {item.title}\n                {purchases > 1 ? ` x${purchases}` : \"\"}\n                {index === items.length - 1 ? \"\" : \", \"}\n              </Component>\n            );\n          })}\n        </Typography>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default ListComponent;\n","import { Dialog, Grid } from \"@material-ui/core\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  getDialogsByFunction,\n  getServusiForExport,\n  getWaresDeduped,\n} from \"../../redux/selectors\";\nimport { toggleDialog } from \"../../redux/slice\";\nimport ListComponent from \"../list\";\n\nconst ExportModalComponent = () => {\n  const dispatch = useDispatch();\n  const isOpen = useSelector(getDialogsByFunction)(\"export\");\n  const wares = useSelector(getWaresDeduped);\n  const servusi = useSelector(getServusiForExport);\n  return (\n    <Dialog open={isOpen} onClose={() => dispatch(toggleDialog(\"export\"))}>\n      <Grid container style={{ padding: \"32px\" }} spacing={4}>\n        <Grid item xs={12}>\n          <ListComponent title=\"Wares\" items={wares} />\n        </Grid>\n        <Grid item xs={12}>\n          <ListComponent title=\"Servusi\" items={servusi} />\n        </Grid>\n      </Grid>\n    </Dialog>\n  );\n};\n\nexport default ExportModalComponent;\n","import { Grid, Typography } from \"@material-ui/core\";\nimport Interweave from \"interweave\";\nimport React from \"react\";\nimport { Fragment } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { getShowStory } from \"../../redux/selectors\";\n\nconst SectionComponent = ({ children, section, padding }) => {\n  const { title, description, alwaysShowTitle } = section;\n  const showStory = useSelector(getShowStory);\n  return (\n    <Grid container style={{ ...(padding && { padding }) }} spacing={4}>\n      {(showStory || alwaysShowTitle) && (\n        <Grid item xs={12}>\n          <Typography variant=\"h4\">{title}</Typography>\n        </Grid>\n      )}\n      {showStory && (\n        <Grid item xs={12}>\n          <Typography>\n            {description.map((desc, index) => {\n              return (\n                <Fragment key={`Interweave-desc-${index}`}>\n                  <Interweave content={desc} />\n                  <br />\n                  <br />\n                </Fragment>\n              );\n            })}\n          </Typography>\n        </Grid>\n      )}\n      {children && (\n        <Grid item xs={12}>\n          {children}\n        </Grid>\n      )}\n    </Grid>\n  );\n};\n\nexport default SectionComponent;\n","import { Checkbox, FormControlLabel, FormGroup, Grid } from \"@material-ui/core\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getShowStory } from \"../../redux/selectors\";\nimport { toggleShowStory } from \"../../redux/slice\";\n\nconst ShowStoryComponent = () => {\n  const checked = useSelector(getShowStory);\n  const dispatch = useDispatch();\n  return (\n    <Grid container justify=\"center\" style={{ paddingTop: \"16px\" }}>\n      <FormGroup row>\n        <FormControlLabel\n          label=\"Show Story/Instructions?\"\n          labelPlacement=\"top\"\n          control={\n            <Checkbox\n              checked={checked}\n              onChange={() => dispatch(toggleShowStory())}\n              name=\"Show Story\"\n            />\n          }\n        />\n      </FormGroup>\n    </Grid>\n  );\n};\n\nexport default ShowStoryComponent;\n","import \"./App.css\";\nimport CardListComponent from \"./components/card-list\";\nimport ServusTitleComponent from \"./servus-components/title\";\nimport ServusListComponent from \"./servus-components/servus-list\";\nimport ApplicationBarComponent from \"./components/app-bar\";\nimport ExportModalComponent from \"./export-components/modal\";\nimport SectionComponent from \"./components/section\";\nimport data from \"./data\";\nimport ShowStoryComponent from \"./components/show-story\";\nimport { Typography } from \"@material-ui/core\";\n\nfunction App() {\n  return (\n    <div\n      className=\"App\"\n      style={{\n        overflowX: \"hidden\",\n        overflowY: \"hidden\",\n        padding: \"0 16px 64px 16px\",\n      }}\n    >\n      <ApplicationBarComponent />\n      <Typography variant=\"h4\" style={{ padding: \"64px 0 0 0\" }}>\n        Willing Slave Market\n      </Typography>\n      <ShowStoryComponent />\n      <SectionComponent section={data.opening}></SectionComponent>\n      <SectionComponent section={data.servusi}></SectionComponent>\n      <SectionComponent section={data.your_harem}>\n        <ServusTitleComponent />\n        <ServusListComponent />\n      </SectionComponent>\n      <SectionComponent section={data.wares}>\n        <CardListComponent />\n      </SectionComponent>\n      <SectionComponent section={data.post_script}></SectionComponent>\n      <SectionComponent section={data.the_next_day}></SectionComponent>\n      <ExportModalComponent />\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport dataSlice from \"../redux/slice\";\r\n\r\nexport default configureStore({\r\n  reducer: dataSlice,\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"./app/store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}